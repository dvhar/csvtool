Not everything is implemented.
current BNF:
<PreParseTokens> -> <Select> <From> <Where> <Order>
<Select>     -> <top> <Selections>
<top>        -> top INT | ε
<Selections> -> <column> <Selections> | * <Selections> | <Special> <Selections> | ε
<column>     -> column
<Special>    -> distinct <column> | <Function> | <Case>
<From>       -> from filename <alias>
<alias>      -> as alias | ε
<Where>      -> where <Conditions>
<Conditions> -> <Compare> <More> | ( <Conditions> ) <More>
<More>       -> logop <Conditions> | ε
<Compare>    -> <column> <Rel>
<Rel>        -> relop value | between value and value
<Order>      -> order by <column> <OMethod> | ε
<Omethod>    -> asc | ε



TODO expressions: <exprAdd> instead of column and value

<exprAdd>  ->  * | <exprMult> + <exprAdd> | <exprMult> - <exprAdd> | <exprMult>
<exprMult> ->  <exprNeg> * <exprMult> | <exprNeg> / <exprMult> | <exprNeg>
<exprNeg>  ->  - <exprCase> | <exprCase>
<exprCase  ->  case <caseWhenExprList> end
             | case <caseWhenExprList> else <exprAdd> end
             | case <exprAdd> <casePredicateList> end
             | case <exprAdd> <casePredicateList> else <exprAdd> end
             | <value>
<value> -> column | literal | ( <exprAdd> )
<caseWhenExprList> -> <caseWhenExpr> <caseWhenExprList> | <caseWhenExpr>
<caseWhenExpr>     -> when <exprAdd> then <exprAdd>
<casePredicateList> -> <casePredicate> <casePredicateList> | <casePredicate>
<casePredicate>     -> when <predicates> then <exprAdd>
<predicates>        -> <predicateCompare> <logop> <predicates> | <predicateCompare>
<predicateCompare>  -> <exprAdd> <relop> <exprAdd>
